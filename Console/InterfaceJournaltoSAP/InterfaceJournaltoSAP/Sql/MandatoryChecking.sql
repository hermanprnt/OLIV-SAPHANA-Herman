
DECLARE @@ERR VARCHAR(100);

SET @@ERR = '';

DECLARE @@COUNTRY_CD VARCHAR(255)
	,@@COMPANY_CD VARCHAR(255)
	,@@COMPANY_BRANCH VARCHAR(255)
	,@@LEGACY_SYSTEM VARCHAR(255)
	,@@PART_CATEGORY VARCHAR(255)
	,@@DOC_NO VARCHAR(255)
	,@@DOC_TYPE VARCHAR(255)
	,@@DOC_DT VARCHAR(255)
	,@@DOC_CURR VARCHAR(255)
	,@@TERM_OF_PAYMENT VARCHAR(255)
	,@@SUPP_CD VARCHAR(255)
	,@@SUPP_PLANT_CD VARCHAR(255)
	,@@PART_RECEIVED_DT VARCHAR(255)
	,@@PO_NO VARCHAR(255)
	,@@ACT_TTL_AMT VARCHAR(255)
	,@@TAX_AMT VARCHAR(255)
	,@@GRAND_AMT VARCHAR(255)
	,@@MARK_CD VARCHAR(255)
	,@@SIGN_CD VARCHAR(255)
	,@@STOCK_MOVEMENT_FLAG VARCHAR(255)
	,@@CANCEL_FLAG VARCHAR(255)
	,@@INTERFACE_TYPE_FLAG VARCHAR(255)
	,@@COA_FLAG VARCHAR(255)
	,@@HEADER_RESERVED_3 VARCHAR(255)
	,@@HEADER_RESERVED_4 VARCHAR(255)
	,@@DETAIL_RESERVED_3 VARCHAR(255)
	,@@DETAIL_RESERVED_4 VARCHAR(255)
	,@@GR_NUMBER VARCHAR(255)
	,@@MATERIAL_INDICATOR VARCHAR(255)
	,@@PAY_METHOD VARCHAR(255)
	,@@INVOICE_ID INT

DECLARE @@CHECKMANDATORY TABLE (
	COUNTRY_CD VARCHAR(255)
	,COMPANY_CD VARCHAR(255)
	,COMPANY_BRANCH VARCHAR(255)
	,LEGACY_SYSTEM VARCHAR(255)
	,PART_CATEGORY VARCHAR(255)
	,DOC_NO VARCHAR(255)
	,DOC_TYPE VARCHAR(255)
	,DOC_DT VARCHAR(255)
	,DOC_CURR VARCHAR(255)
	,TERM_OF_PAYMENT VARCHAR(255)
	,SUPP_CD VARCHAR(255)
	,SUPP_PLANT_CD VARCHAR(255)
	,PART_RECEIVED_DT VARCHAR(255)
	,PO_NO VARCHAR(255)
	,ACT_TTL_AMT VARCHAR(255)
	,TAX_AMT VARCHAR(255)
	,GRAND_AMT VARCHAR(255)
	,MARK_CD VARCHAR(255)
	,SIGN_CD VARCHAR(255)
	,STOCK_MOVEMENT_FLAG VARCHAR(255)
	,CANCEL_FLAG VARCHAR(255)
	,INTERFACE_TYPE_FLAG VARCHAR(255)
	,COA_FLAG VARCHAR(255)
	,HEADER_RESERVED_3 VARCHAR(255)
	,HEADER_RESERVED_4 VARCHAR(255)
	,DETAIL_RESERVED_3 VARCHAR(255)
	,DETAIL_RESERVED_4 VARCHAR(255)
	,GR_NUMBER VARCHAR(255)
	,MATERIAL_INDICATOR VARCHAR(255)
	,PAY_METHOD VARCHAR(255)
	,INVOICE_ID INT
	,ISERROR BIT
	)

INSERT INTO @@CHECKMANDATORY (
	COUNTRY_CD
	,COMPANY_CD
	,COMPANY_BRANCH
	,LEGACY_SYSTEM
	,PART_CATEGORY
	,DOC_NO
	,DOC_TYPE
	,DOC_DT
	,DOC_CURR
	,TERM_OF_PAYMENT
	,SUPP_CD
	,SUPP_PLANT_CD
	,PART_RECEIVED_DT
	,PO_NO
	,ACT_TTL_AMT
	,TAX_AMT
	,GRAND_AMT
	,MARK_CD
	,SIGN_CD
	,STOCK_MOVEMENT_FLAG
	,CANCEL_FLAG
	,INTERFACE_TYPE_FLAG
	,COA_FLAG
	,HEADER_RESERVED_3
	,HEADER_RESERVED_4
	,DETAIL_RESERVED_3
	,DETAIL_RESERVED_4
	,GR_NUMBER
	,MATERIAL_INDICATOR
	,PAY_METHOD
	,INVOICE_ID
	)
SELECT COUNTRY_CD
	,COMPANY_CD
	,COMPANY_BRANCH
	,LEGACY_SYSTEM
	,PART_CATEGORY
	,DOC_NO
	,DOC_TYPE
	,DOC_DT
	,DOC_CURR
	,TERM_OF_PAYMENT
	,SUPP_CD
	,SUPP_PLANT_CD
	,PART_RECEIVED_DT
	,PO_NO
	,ACT_TTL_AMT
	,TAX_AMT
	,GRAND_AMT
	,MARK_CD
	,SIGN_CD
	,STOCK_MOVEMENT_FLAG
	,CANCEL_FLAG
	,INTERFACE_TYPE_FLAG
	,COA_FLAG
	,HEADER_RESERVED_3
	,HEADER_RESERVED_4
	,DETAIL_RESERVED_3
	,DETAIL_RESERVED_4
	,GR_NUMBER
	,MATERIAL_INDICATOR
	,PAY_METHOD
	,INVOICE_ID
FROM TB_T_BH00021

--MANDATORY CHECKING
UPDATE A
SET  COUNTRY_CD= (
		CASE 
			WHEN ISNULL(A.COUNTRY_CD, '') = ''
				THEN 'Field COUNTRY_CD should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,COMPANY_CD= (
		CASE 
			WHEN ISNULL(A.COMPANY_CD, '') = ''
				THEN 'Field COMPANY_CD should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,COMPANY_BRANCH= (
		CASE 
			WHEN ISNULL(A.COMPANY_BRANCH, '') = ''
				THEN 'Field COMPANY_BRANCH should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,LEGACY_SYSTEM= (
		CASE 
			WHEN ISNULL(A.LEGACY_SYSTEM, '') = ''
				THEN 'Field LEGACY_SYSTEM should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,PART_CATEGORY= (
		CASE 
			WHEN ISNULL(A.PART_CATEGORY, '') = ''
				THEN 'Field PART_CATEGORY should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,DOC_NO= (
		CASE 
			WHEN ISNULL(A.DOC_NO, '') = ''
				THEN 'Field DOC_NO should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,DOC_TYPE= (
		CASE 
			WHEN ISNULL(A.DOC_TYPE, '') = ''
				THEN 'Field DOC_TYPE should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,DOC_DT= (
		CASE 
			WHEN ISNULL(A.DOC_DT, '') = ''
				THEN 'Field DOC_DT should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,DOC_CURR= (
		CASE 
			WHEN ISNULL(A.DOC_CURR, '') = ''
				THEN 'Field DOC_CURR should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,TERM_OF_PAYMENT= (
		CASE 
			WHEN ISNULL(A.TERM_OF_PAYMENT, '') = ''
				THEN 'Field TERM_OF_PAYMENT should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,SUPP_CD= (
		CASE 
			WHEN ISNULL(A.SUPP_CD, '') = ''
				THEN 'Field SUPP_CD should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,SUPP_PLANT_CD= (
		CASE 
			WHEN ISNULL(A.SUPP_PLANT_CD, '') = ''
				THEN 'Field SUPP_PLANT_CD should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,PART_RECEIVED_DT= (
		CASE 
			WHEN ISNULL(A.PART_RECEIVED_DT, '') = ''
				THEN 'Field PART_RECEIVED_DT should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,PO_NO= (
		CASE 
			WHEN ISNULL(A.PO_NO, '') = ''
				THEN 'Field PO_NO should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,ACT_TTL_AMT= (
		CASE 
			WHEN ISNULL(A.ACT_TTL_AMT, '') = ''
				THEN 'Field ACT_TTL_AMT should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,TAX_AMT= (
		CASE 
			WHEN ISNULL(A.TAX_AMT, '') = ''
				THEN 'Field TAX_AMT should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,GRAND_AMT= (
		CASE 
			WHEN ISNULL(A.GRAND_AMT, '') = ''
				THEN 'Field GRAND_AMT should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,MARK_CD= (
		CASE 
			WHEN ISNULL(A.MARK_CD, '') = ''
				THEN 'Field MARK_CD should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,SIGN_CD= (
		CASE 
			WHEN ISNULL(A.SIGN_CD, '') = ''
				THEN 'Field SIGN_CD should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,STOCK_MOVEMENT_FLAG= (
		CASE 
			WHEN ISNULL(A.STOCK_MOVEMENT_FLAG, '') = ''
				THEN 'Field STOCK_MOVEMENT_FLAG should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,CANCEL_FLAG= (
		CASE 
			WHEN ISNULL(A.CANCEL_FLAG, '') = ''
				THEN 'Field CANCEL_FLAG should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,INTERFACE_TYPE_FLAG= (
		CASE 
			WHEN ISNULL(A.INTERFACE_TYPE_FLAG, '') = ''
				THEN 'Field INTERFACE_TYPE_FLAG should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,COA_FLAG= (
		CASE 
			WHEN ISNULL(A.COA_FLAG, '') = ''
				THEN 'Field COA_FLAG should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,HEADER_RESERVED_3= (
		CASE 
			WHEN ISNULL(A.HEADER_RESERVED_3, '') = ''
				THEN 'Field HEADER_RESERVED_3 should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,HEADER_RESERVED_4= (
		CASE 
			WHEN ISNULL(A.HEADER_RESERVED_4, '') = ''
				THEN 'Field HEADER_RESERVED_4 should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,DETAIL_RESERVED_3= (
		CASE 
			WHEN ISNULL(A.DETAIL_RESERVED_3, '') = ''
				THEN 'Field DETAIL_RESERVED_3 should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,DETAIL_RESERVED_4= (
		CASE 
			WHEN ISNULL(A.DETAIL_RESERVED_4, '') = ''
				THEN 'Field DETAIL_RESERVED_4 should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,GR_NUMBER= (
		CASE 
			WHEN ISNULL(A.GR_NUMBER, '') = ''
				THEN 'Field GR_NUMBER should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,MATERIAL_INDICATOR= (
		CASE 
			WHEN ISNULL(A.MATERIAL_INDICATOR, '') = ''
				THEN 'Field MATERIAL_INDICATOR should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,PAY_METHOD = (
		CASE 
			WHEN ISNULL(A.PAY_METHOD, '') = ''
				THEN 'Field PAY_METHOD should not be empty for Invoice ID ' + CONVERT(VARCHAR, INVOICE_ID) + ', GR No ' + GR_NUMBER + ', Invoice No ' + ISNULL(DETAIL_RESERVED_4, '')
			END
		)
	,ISERROR = 1
FROM @@CHECKMANDATORY A

	DECLARE cus_mandatory CURSOR
	FOR
	SELECT COUNTRY_CD
		,COMPANY_CD
		,COMPANY_BRANCH
		,LEGACY_SYSTEM
		,PART_CATEGORY
		,DOC_NO
		,DOC_TYPE
		,DOC_DT
		,DOC_CURR
		,TERM_OF_PAYMENT
		,SUPP_CD
		,SUPP_PLANT_CD
		,PART_RECEIVED_DT
		,PO_NO
		,ACT_TTL_AMT
		,TAX_AMT
		,GRAND_AMT
		,MARK_CD
		,SIGN_CD
		,STOCK_MOVEMENT_FLAG
		,CANCEL_FLAG
		,INTERFACE_TYPE_FLAG
		,COA_FLAG
		,HEADER_RESERVED_3
		,HEADER_RESERVED_4
		,DETAIL_RESERVED_3
		,DETAIL_RESERVED_4
		,GR_NUMBER
		,MATERIAL_INDICATOR
		,PAY_METHOD
	FROM @@CHECKMANDATORY
	WHERE ISERROR = 1

	OPEN cus_mandatory

	FETCH NEXT
	FROM cus_mandatory
	INTO @@COUNTRY_CD
		,@@COMPANY_CD
		,@@COMPANY_BRANCH
		,@@LEGACY_SYSTEM
		,@@PART_CATEGORY
		,@@DOC_NO
		,@@DOC_TYPE
		,@@DOC_DT
		,@@DOC_CURR
		,@@TERM_OF_PAYMENT
		,@@SUPP_CD
		,@@SUPP_PLANT_CD
		,@@PART_RECEIVED_DT
		,@@PO_NO
		,@@ACT_TTL_AMT
		,@@TAX_AMT
		,@@GRAND_AMT
		,@@MARK_CD
		,@@SIGN_CD
		,@@STOCK_MOVEMENT_FLAG
		,@@CANCEL_FLAG
		,@@INTERFACE_TYPE_FLAG
		,@@COA_FLAG
		,@@HEADER_RESERVED_3
		,@@HEADER_RESERVED_4
		,@@DETAIL_RESERVED_3
		,@@DETAIL_RESERVED_4
		,@@GR_NUMBER
		,@@MATERIAL_INDICATOR
		,@@PAY_METHOD

	WHILE @@@FETCH_STATUS = 0
	BEGIN

		IF @@COUNTRY_CD LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@COUNTRY_CD MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@COMPANY_CD LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@COMPANY_CD MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@COMPANY_BRANCH LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@COMPANY_BRANCH MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@LEGACY_SYSTEM LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@LEGACY_SYSTEM MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@PART_CATEGORY LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@PART_CATEGORY MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@DOC_NO LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@DOC_NO MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@DOC_TYPE LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@DOC_TYPE MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@DOC_DT LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@DOC_DT MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@DOC_CURR LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@DOC_CURR MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@TERM_OF_PAYMENT LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@TERM_OF_PAYMENT MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@SUPP_CD LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@SUPP_CD MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@SUPP_PLANT_CD LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@SUPP_PLANT_CD MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@PART_RECEIVED_DT LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@PART_RECEIVED_DT MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@PO_NO LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@PO_NO MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@ACT_TTL_AMT LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@ACT_TTL_AMT MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@TAX_AMT LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@TAX_AMT MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@GRAND_AMT LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@GRAND_AMT MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@MARK_CD LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@MARK_CD MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@SIGN_CD LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@SIGN_CD MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@STOCK_MOVEMENT_FLAG LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@STOCK_MOVEMENT_FLAG MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@CANCEL_FLAG LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@CANCEL_FLAG MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@INTERFACE_TYPE_FLAG LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@INTERFACE_TYPE_FLAG MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@COA_FLAG LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@COA_FLAG MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@HEADER_RESERVED_3 LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@HEADER_RESERVED_3 MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@HEADER_RESERVED_4 LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@HEADER_RESERVED_4 MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@DETAIL_RESERVED_3 LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@DETAIL_RESERVED_3 MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@DETAIL_RESERVED_4 LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@DETAIL_RESERVED_4 MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@GR_NUMBER LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@GR_NUMBER MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@MATERIAL_INDICATOR LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@MATERIAL_INDICATOR MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END
		IF @@PAY_METHOD LIKE '%should not be empty%'
		BEGIN
			SET @@ERR = 'ERR'
			INSERT INTO TB_R_LOG_D
			SELECT @ProcessId PROCESS_ID ,(SELECT MAX(SEQ_NO) FROM TB_R_LOG_D WHERE PROCESS_ID = @ProcessId) + 1 SEQ_NO ,'MCSTSTD003E' MESSAGE_ID ,'E' MESSAGE_TYPE ,
			@@PAY_METHOD MESSAGE ,'Mandatory Checking' LOCATION ,GETDATE() CREATED_DT ,'System' CREATED_BY
		END

		FETCH NEXT
		FROM cus_mandatory
		INTO @@COUNTRY_CD
			,@@COMPANY_CD
			,@@COMPANY_BRANCH
			,@@LEGACY_SYSTEM
			,@@PART_CATEGORY
			,@@DOC_NO
			,@@DOC_TYPE
			,@@DOC_DT
			,@@DOC_CURR
			,@@TERM_OF_PAYMENT
			,@@SUPP_CD
			,@@SUPP_PLANT_CD
			,@@PART_RECEIVED_DT
			,@@PO_NO
			,@@ACT_TTL_AMT
			,@@TAX_AMT
			,@@GRAND_AMT
			,@@MARK_CD
			,@@SIGN_CD
			,@@STOCK_MOVEMENT_FLAG
			,@@CANCEL_FLAG
			,@@INTERFACE_TYPE_FLAG
			,@@COA_FLAG
			,@@HEADER_RESERVED_3
			,@@HEADER_RESERVED_4
			,@@DETAIL_RESERVED_3
			,@@DETAIL_RESERVED_4
			,@@GR_NUMBER
			,@@MATERIAL_INDICATOR
			,@@PAY_METHOD
	END

	CLOSE cus_mandatory

	DEALLOCATE cus_mandatory

SELECT @@ERR ERR