@using consumable.Models.EFaktur
@using consumable.Models
@{ 
    List<EFaktur> eFakturList = (List<EFaktur>)ViewData["EFakturList"];
}

<div class="row">
    <div class="table-responsive col-xs-12 col-sm-12" style="overflow: hidden;">
        <div style="border: 1pt solid #ccc;">
            <div id="tScrollHead" style="width: 98.5%; overflow: hidden;">
                <table id="dynamic-table" class="table table-striped table-bordered table-condensed table-fixed"
                    style="width: 770px; max-width: 770px !important;">
                    <thead>
                        <tr>
                            <th width="150px" class="sorting" data-field="TAX_INVOICE_NO" data-sort="none">
                                Tax Invoice No
                            </th>
                            <th width="120px" class="sorting" data-field="TAX_INVOICE_DT" data-sort="none">
                                Tax Invoice Date
                            </th>
                            <th width="120px" class="sorting" data-field="VAT_PRICE" data-sort="none">
                                Tax Amount
                            </th>
                             <th class="sorting" data-field="SUPPLIER_CD" data-sort="none" width="100px">
                                Supplier Code
                            </th>
                            <th class="sorting" data-field="SUPPLIER_NAME" data-sort="none" width="200px">
                                Supplier Name
                            </th>
                            <th class="sorting" data-field="IS_USED" data-sort="none">
                                Is Used
                            </th>                   
                        </tr>
                    </thead>
                </table>
            </div>
            <div id="tScrollBody" style="overflow: scroll; height: 250px;">
                <table id="tblScroll" class="table table-striped table-bordered table-condensed table-fixed"
                    style="width: 770px; max-width: 770px !important;">
                    <tbody>
                        @{
                            if (eFakturList.Count > 0)
                            {
                                foreach (consumable.Models.EFaktur.EFaktur item in eFakturList)
                                {
                            <tr>
                                <td width="150px" class="text-center">
                                    @item.TAX_INVOICE_NO
                                </td>
                                <td width="120px" class="text-center">
                                    @(item.TAX_INVOICE_DT.HasValue ? item.TAX_INVOICE_DT.Value.ToString("dd.MM.yyyy") : string.Empty)
                                </td>  
                                <td width="120px" class="text-center">
                                     @item.VAT_PRICE.FormatCommaSeparator()
                                </td>
                                <td class="text-center" width="100px">@item.SUPPLIER_CD
                                </td>
                                <td class="text-left"  width="200px">@item.SUPPLIER_NAME
                                </td>
                                <td class="text-center">
                                     @item.IS_USED
                                </td>                    
                            </tr>   
                                }
                            }
                            else
                            {
                            <tr>
                                <td colspan="13" class="text-center">
                                    No data retrieved.
                                </td>
                            </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div>
                <table class="table table-striped table-bordered table-condensed table-fixed" style="width: 100%">
                    <tfoot>
                        <tr>
                            <td colspan="13">
                                @Html.Partial("_UIPaging")
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $("document").ready(function () {
        $("#checkall").click(function () {
            $(".check:enabled").prop("checked", $("#checkall").is(":checked"));
        });
    });

    $("#tScrollBody").scroll(function () {
        $("#tScrollHead").scrollLeft($("#tScrollBody").scrollLeft());
        $("#tScrollFilter").scrollLeft($("#tScrollBody").scrollLeft());
    });

    var table = document.getElementById("dynamic-table");
    if (table != null) {
        for (var i = 0; i < table.rows.length; i++) {
            for (var j = 0; j < table.rows[i].cells.length; j++) {
                table.rows[i].cells[j].onclick = function () {
                    tableText(this);
                    sorting_execute = '1';
                };
            }
        }
    }

    function tableText(tableCell) {
        var removeClass;
        var addClass;
        var dataSort;

        if (tableCell.getAttribute("class").indexOf('sorting') >= 0) {
            if (tableCell.getAttribute("class").indexOf('sorting_asc') >= 0) {

                removeClass = 'sorting_asc';
                addClass = 'sorting_desc';
                dataSort = 'desc';

            } else if (tableCell.getAttribute("class").indexOf('sorting_desc') >= 0) {

                removeClass = 'sorting_desc';
                addClass = 'sorting_none';
                dataSort = 'none';

            } else {

                removeClass = 'sorting_none';
                addClass = 'sorting_asc';
                dataSort = 'asc';

            }
        }

        //reset all
        var tableReset = document.getElementById("dynamic-table");
        if (tableReset != null) {
            for (var i = 0; i < tableReset.rows.length; i++) {
                for (var j = 0; j < tableReset.rows[i].cells.length; j++) {

                    if (tableReset.rows[i].cells[j].className.indexOf('sorting_asc') >= 0) {
                        tableReset.rows[i].cells[j].classList.remove('sorting_asc');
                        tableReset.rows[i].cells[j].classList.add('sorting');
                        tableReset.rows[i].cells[j].dataset.sort = 'none';
                    }

                    if (tableReset.rows[i].cells[j].className.indexOf('sorting_desc') >= 0) {
                        tableReset.rows[i].cells[j].classList.remove('sorting_desc');
                        tableReset.rows[i].cells[j].classList.add('sorting');
                        tableReset.rows[i].cells[j].dataset.sort = 'none';
                    }

                }
            }
        }
        // end

        if (tableCell.getAttribute("class").indexOf('sorting') >= 0) {
            tableCell.classList.remove(removeClass);
            tableCell.classList.add(addClass);
            tableCell.dataset.sort = dataSort;

            $.ajax({
                type: "GET",
                url: '@Html.Toyota().Page.GetActionUrl("GetInvoiceReceivingSort")',
                data: {
                    field: tableCell.dataset.field,
                    sort: dataSort
                },
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    $("#tblScroll")
                                .find('tbody')
                                .html(
                                    result
                                );
                }
            });
        }
    }
</script>
